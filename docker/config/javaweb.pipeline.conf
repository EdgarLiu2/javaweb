input {
	beats {
		port => "5044"
		include_codec_tag => false
	}
}

filter {
	if [log_type] == "tomcat" {
		grok {
			match => { "message" => "^%{TIMESTAMP_ISO8601:datetimestamp} %{LOGLEVEL:level}[ ]+\[(?<threadname>[^\]]+)\] \[(?<logger>[^\]]*)\] - \(%{EMAILADDRESS:actor}\) \(%{IP:ip}\) %{GREEDYDATA:rawmessage}$" }
			tag_on_failure => []
		}

		kv {
			source=> "rawmessage"
			field_split => ", "
			value_split => "="
		}
		
		date {
			match => [ "datetimestamp", "YYYY-MM-dd HH:mm:ss,SSS", "YYYY/MM/dd HH:mm:ss.SSS" ]
		}
	} else if [log_type] == "nginx" {
		grok {
			match => { "message" => ["%{IPORHOST:[nginx][access][remote_ip]} - %{DATA:[nginx][access][user_name]} \[%{HTTPDATE:[nginx][access][time]}\] \"%{WORD:[nginx][access][method]} %{DATA:[nginx][access][url]} HTTP/%{NUMBER:[nginx][access][http_version]}\" %{NUMBER:[nginx][access][response_code]} %{NUMBER:[nginx][access][body_sent][bytes]} \"%{DATA:[nginx][access][referrer]}\" \"%{DATA:[nginx][access][agent]}\""] }
			remove_field => "message"
		}
		mutate {
			add_field => { "read_timestamp" => "%{@timestamp}" }
		}
		date {
			match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
			remove_field => "[nginx][access][time]"
		}
		useragent {
			source => "[nginx][access][agent]"
			target => "[nginx][access][user_agent]"
			remove_field => "[nginx][access][agent]"
		}
		geoip {
			source => "[nginx][access][remote_ip]"
			target => "[nginx][access][geoip]"
		}
	}
	
}

output {
	if [log_type] == "tomcat" {
		elasticsearch {
			hosts => [ "elk-elasticsearch-1:9200", "elk-elasticsearch-2:9200" ]
			index => "javaweb-%{+YYYY.MM.dd}"
		}
	} else if [log_type] == "nginx" {
		elasticsearch {
			hosts => [ "elk-elasticsearch-1:9200", "elk-elasticsearch-2:9200" ]
			index => "access-%{+YYYY.MM.dd}"
		}
	}
}
